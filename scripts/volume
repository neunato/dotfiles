#!/bin/dash

# volume                    - get current volume
# volume up   [--silent]    - turn up volume by 10%
# volume down [--silent]    - turn down volume by 10%
# volume <n>  [--silent]    - set volume to wanted %
# volume mute               - toggle mute

get_volume() {
   wpctl get-volume @DEFAULT_SINK@ | awk '{printf $2*100}'
}

is_muted() {
   wpctl get-volume @DEFAULT_SINK@ | grep -q "MUTED"
}

set_volume() {
   wpctl set-volume -l 1.0 @DEFAULT_SINK@ "$1"
   local info
   local volume
   info="$(wpctl get-volume @DEFAULT_SINK@)"
   if [ "$2" != "--silent" ]; then
      volume="$(echo "$info" | awk '{printf $2*100}')"
      notify-send "Volume $volume%" -a osd -h "int:value:$volume" -h string:x-canonical-private-synchronous:osd
   fi
   if [ "${1%-}" = "$1" ] && echo "$info" | grep -q "MUTED"; then
      wpctl set-mute @DEFAULT_SINK@ 0
   fi
}

if [ -z "$1" ]; then
   get_volume
   echo ""
   exit
fi

if [ "$1" = "up" ]; then
   set_volume 10%+ "$2"
   exit
fi

if [ "$1" = "down" ]; then
   set_volume 10%- "$2"
   exit
fi

if [ "$1" -eq "$1" ] 2> /dev/null; then
   set_volume "$1%" "$2"
   exit
fi

if [ "$1" = "mute" ]; then
   wpctl set-mute @DEFAULT_SINK@ toggle
   if [ "$2" != "--silent" ]; then
      notify-send "$(is_muted && echo "Sound Muted" || echo "Sound Unmuted")" -a osd -h string:x-canonical-private-synchronous:osd
   fi
   exit
fi

echo "Expected 'volume [up|down|<n>|mute]'" >&2
exit 1
